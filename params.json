{"name":"Consoler","tagline":"Extensions for symfony/console package, adding support for container-interop/container-interop compatible service container(s).","body":"# vaibhavpandeyvpz/consoler\r\nExtensions for ```Symfony\\Component\\Console\\Application``` and ```Symfony\\Component\\Console\\Command\\Command``` from [symfony/console](https://github.com/symfony/console), adding support for [container-interop/container-interop](https://github.com/container-interop/container-interop) compatible service container(s).\r\n\r\nInstall\r\n------\r\n```bash\r\ncomposer require vaibhavpandeyvpz/consoler\r\n```\r\n\r\nUsage\r\n------\r\nCreate an instance of ```Consoler\\Application```, assign it a ```Interop\\Container\\ContainerInterface``` instance and run as usual.\r\n\r\n```php\r\n#!/usr/bin/env php\r\n\r\n$app = new Consoler\\Application();\r\n\r\n$app->setContainer($container = new Katora\\Container());\r\n\r\n$container->singleton('pdo', function ()\r\n{\r\n    return new PDO(/** args */);\r\n});\r\n\r\n$app->add(new InstallCommand());\r\n\r\n$app->run();\r\n```\r\n\r\nLet your command classes extend ```Consoler\\Command```.\r\n\r\n```php\r\nuse Consoler\\Command;\r\nuse Symfony\\Component\\Console\\Input\\InputInterface;\r\nuse Symfony\\Component\\Console\\Output\\OutputInterface;\r\n\r\nclass InstallCommand extends Command\r\n{\r\n    protected function execute(InputInterface $input, OutputInterface $output)\r\n    {\r\n        /** @var \\PDO $pdo */\r\n        $pdo = $this->getContainer()->get('pdo');\r\n        // ...more code!\r\n    }\r\n}\r\n```\r\n\r\nNote\r\n------\r\nYou may also want to install [vaibhavpandeyvpz/katora](https://github.com/vaibhavpandeyvpz/katora) for using ```Katora\\Container```. To do so, run following:\r\n```bash\r\ncomposer require vaibhavpandeyvpz/katora\r\n```\r\n\r\nLicense\r\n------\r\nSee [LICENSE.md](https://github.com/vaibhavpandeyvpz/consoler/blob/master/LICENSE.md) file.\r\n","google":"UA-67528024-2","note":"Don't delete this file! It's used internally to help with page regeneration."}